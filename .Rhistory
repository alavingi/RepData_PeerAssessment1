nchar(df[10,])
nchar(df[10])
nchar(df[20])
nchar(df[30])
nchar(df[100])
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
df = readLines(con)
install_github("slidify", "ramnathv")
library(devttols)
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
swirl()
library(stats)
library(swirl)
data(airquality)
head(airquality)
head(factor(airquality$month))
airquality = transform(airquality, Month = factor(Month))
head(airquality)
head(factor(airquality$month))
?transform
?qplot
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
install.packages("caret")
library(caret)
setseed(975)
set.seed(975)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
head(training)
plot(training$CompressiveStrength)
par
summary(par)
par(mfrow = c(1, 1))
plot(training$CompressiveStrength)
head(training, 25)
hist(training$SuperPlasticizer)
hist(as.numeric(as.character(training$SuperPlasticizer))
)
hist(as.numeric(as.character(training$SuperPlasticizer)))
hist(as.numeric(training$SuperPlasticizer))
hist(as.numeric(training$Age))
hist(as.numeric(training$Superplasticizer))
range(training$Superplasticizer)
hist(log(as.numeric(training$Superplasticizer) + 1))
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
head(training)
head(training[,training$IL])
?preprocess
?preProcess
head(training[, c(training$IL_3, training$IL_4)])
head(training[, c(training$IL_3])
?subset
subset(training, select = IL*)
head(training[, grepl("IL", names(training))])
?preprocess
?preProcess
preproc = preprocess(training[, grepl("IL", names(training))], method = "pca", thresh = 0.9)
preproc = preProcess(training[, grepl("IL", names(training))], method = "pca", thresh = 0.9)
ncol(preproc)
preproc
subset = training[, grepl("IL", names(training))]
preproc <- preProcess(training[, grepl("IL", names(training))], method = "pca", thresh = 0.9)
preproc
preproc <- preProcess(training[, grepl("IL", names(training))], method = "pca", thresh = 0.8)
head(training)
trainPC <- predict(preProc, subset)
trainPC <- predict(preproc, subset)
modelFit <- train(training$diagnosis ~ .,method="glm",data=trainPC)
modelFit <- train(training$diagnosis~., method="glm",data=trainPC)
install.packages("e1071")
library(e1071)
modelFit <- train(training$diagnosis~., method="glm",data=trainPC)
modelFit
modelFit <- train(training$diagnosis~., method="glm",data=subset)
modelFit
preproc
modelFit <- train(training$diagnosis~., method="glm",data=preproc)
modelFit <- train(training$diagnosis~., method="glm",data=trainPC)
testPC <- predict(preproc,test)
testPC <- predict(preproc,testing)
testPC <- predict(preproc,testing[, -1])
ncol(testing)
modelFit <- train(training$diagnosis~., method="glm",data=subset)
confusionMatrix(testing$diagnosis,predict(modelFit,testing))
swirl()
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1, 1)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60, 100)$conf.int
mywald(0.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1, 1) * qnorm(0.975) * sqrt(lamb / 94.32)
poisson.test(5, 94.32)
poisson.test(5, 94.32)$conf
?pnorm
pnorm(0.93, 100, 10)
qnorm(93, 100, 10, lower.tain = FALSE)
qnorm(93, 100, 10, lower.tail = FALSE)
qnorm(0.93, 100, 10, lower.tail = FALSE)
pnorm(70, 80, 10)
qnorm(0.95, 1100, 75)
qnorm(0.95, 1100, 7.5)
1 - pbinom(3)
1 - pbinom(3, 5)
1 - pbinom(3, size = 5 prob = 0.5)
?pbinom
1 - pbinom(3, size = 5, prob = 0.5)
ppois(10, 15)
swirl()
setwd("~/Downloads/temp/coursera/rprogramming/week2")
?list.files
filelist <= list.files("specdata")
filelist <- list.files("specdata")
fileslist[1]
filelist[1]
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
?paste
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
files1 <- list.files("specdata")
files[1]
files1[1]
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
data1 <- read.csv(text = "")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
all_data = read.csv(text = "", col.name = c("Date", "sulfate", "nitrate", "ID"), colClasses = "character")
all_data
directory <- "specdata"
filelist <- list.files(directory)
for (i in 1:length(filelist)) {
filedata <- read.csv(paste(directory, filelist[i], sep = "/"), header = TRUE, sep = ",")
rbind(all_data, filedata)
}
nrow(all_data)
filedata <- read.csv(paste(directory, filelist[1], sep = "/"), header = TRUE, sep = ",")
filedata
rbind(all_data, filedata)
all_data
names(all_data)
?rbind
all_data = read.csv(text = "", col.name = c("Date", "sulfate", "nitrate", "ID"), colClasses = "character")
nrow(all_data)
ncol(all_data)
names(filedata)
nrow(filedata)
newdata <- rbind(all_data, filedata)
head(newdata)
all_data <- rbind(all_data, filedata)
head(all_data)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
all_data$ID
id = 1
all_data[all_data$ID = 1]
all_data[all_data$ID = 1,]
all_data[all_data$ID == 1,]
pollutant <- "sulfate"
all_data[all_data$ID == 1, pollutant]
head(all_data[all_data$ID == 1, pollutant])
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
id <- 1:10
head(all_data[all_data$ID %in% id])
head(all_data[all_data$ID %in% id],)
head(all_data[all_data$ID %in% id,])
head(all_data[all_data$ID %in% id,pollutant])
mean(all_data[all_data$ID %in% id,pollutant])
mean(as.numeric(all_data[all_data$ID %in% id,pollutant]))
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:40)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:40)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:40)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:40)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:40)
pollutant
all_data[all_data$ID %in% id, pollutant]
nrow(all_data[all_data$ID %in% id, pollutant])
names(all_data[all_data$ID %in% id, pollutant])
class(all_data[all_data$ID %in% id, pollutant])
head(all_data[all_data$ID %in% id, pollutant])
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:40)
summary(subset(all_data[all_data$ID %in% id, ], select = pollutant)
)
mean(subset(all_data[all_data$ID %in% id, ], select = pollutant))
mean(as.numeric(subset(all_data[all_data$ID %in% id, ], select = pollutant)))
?mean
mean(subset(all_data[all_data$ID %in% id, ], select = pollutant), na.rm = TRUE)
mean(as.numeric(subset(all_data[all_data$ID %in% id, ], select = pollutant)), na.rm = TRUE)
?as.numeric
mean(as.numeric(subset(all_data[all_data$ID %in% id, ], select = pollutant), na.rm = TRUE), na.rm = TRUE)
mean(as.numeric(as.character(subset(all_data[all_data$ID %in% id, ], select = pollutant)), na.rm = TRUE), na.rm = TRUE)
str(subset(all_data[all_data$ID %in% id, ], select = pollutant))
mean(subset(all_data[all_data$ID %in% id, ], select = pollutant), na.rm = TRUE)
lapply(subset(all_data[all_data$ID %in% id, ], select = pollutant), mean,  na.rm = TRUE)
id <- 1:10
lapply(subset(all_data[all_data$ID %in% id, ], select = pollutant), mean,  na.rm = TRUE)
lapply(subset(all_data[all_data$ID %in% id, ], select = pollutant), mean,  na.rm = TRUE)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:40)
pollutantmean("specdata", "sulfate", 1:10)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
all_data
all_data[!is.na(all_data$sulfate)]
all_data[!is.na(all_data$sulfate),]
all_data[!is.na(all_data$sulfate) && !is.na(all_data$nitrate),]
all_data[ !is.na(all_data$nitrate),]
all_data[(!is.na(all_data$sulfate) && !is.na(all_data$nitrate)),]
all_data[((!is.na(all_data$sulfate)) && (!is.na(all_data$nitrate)),]
all_data[((!is.na(all_data$sulfate)) && (!is.na(all_data$nitrate))),]
head(all_data)
all_data[1100:1200,]
all_data[((!is.na(all_data$sulfate)) & (!is.na(all_data$nitrate))),]
all_data[((!is.na(all_data$sulfate)) & (!is.na(all_data$nitrate))),]
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
?data.frame
data.frame(id = 1, nobs = 117)
source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
pollutantmean("specdata", "nitrate", 70:72)
?cor
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
cor(all_data$nitrate, all_data$sulfate)
cor(all_data$nitrate, all_data$sulfate, use = "everything")
cor(all_data$nitrate, all_data$sulfate, use = "complete.obs")
source("corr.R")
corr("specdata", 150)
round(cor(all_data$nitrate, all_data$sulfate, use = "complete.obs"), 5)
source("corr.R")
corr("specdata", 150)
corr("specdata", 400)
nrow(corr("specdata", 400))
length(corr("specdata", 400))
filelist <- list.files("specdata")
length(filelist)
source("corr.R")
source("corr.R")
corr("specdata", 400)
summary(corr("specdata", 400))
summary(corr("specdata", 5000))
source("submitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("corr.R")
corr("specdata", 400)
submit()
submit()
submit()
submit()
setwd("~/Downloads/temp/coursera/reproducible/repo/RepData_PeerAssessment1")
raw_data <- read.csv("../../peer1/activity.csv", head = TRUE, sep ",")
?read.csv
raw_data <- read.csv("../../peer1/activity.csv", header = TRUE, sep ",")
raw_data <- read.csv("../../peer1/activity.csv", header = TRUE, sep = ",")
aggregate_data <- aggregate(steps ~ date, raw_data, as.vector)
head(aggregate_data, 1)
names(aggregate_data)
sum(aggregate_data[1,]$steps)
aggregate_data$dailyTotalSteps <- sum(aggregate_data$steps)
names(aggregate_data)
head(aggregate_data, 1)
for (i in 1:nrow(aggregate_data)) {}
aggregate_data[i, ]$totalDailySteps <- sum(aggregate_data[i,]$steps)
aggregate_data[i, totalDailySteps] <- sum(aggregate_data[i,steps])
aggregate_data[1, steps]
aggregate_data[1, $steps]
aggregate_data[1, 2]
sum(aggregate_data[1, 2])
aggregate_data[1,3]
aggregate_data[i, 3] <- sum(aggregate_data[i, 2])
aggregate_data[1, $total_daily_steps] <- sum(aggregae_data[1, 2])
aggregate_data[1, $totalDailySteps] <- sum(aggregate_data[1, 2])
aggregate_data[1, totalDailySteps] <- sum(aggregate_data[1, 2])
aggregate_data[1, aggregate_data$totalDailySteps] <- sum(aggregate_data[1, 2])
?hist
for (i in 1:nrow(aggregate_data)) {
aggregate_data[i, aggregate_data$total_daily_steps] <- sum(aggregate_data[i, 2])
}
hist(aggregate_data$total_daily_steps)
head(aggregate_data[,3:4])
head(aggregate_data[,3])
names(aggregate_data)
aggregate_data[1,]$dailyTotalSteps
aggregate_data$daily_total_steps < 100
aggregate_data$daily_total_steps <- 100
names(aggregate_data)
aggregate_data[1,]$daily_total_steps
for (i in 1:nrow(aggregate_data)) {
aggregate_data[i,]$total_daily_steps] <- sum(aggregate_data[i, aggregate_data$steps])
}
for (i in 1:nrow(aggregate_data)) {
aggregate_data[i,]$total_daily_steps <- sum(aggregate_data[i, aggregate_data$steps])
}
for (i in 1:nrow(aggregate_data)) {
aggregate_data[i,]$total_daily_steps <- sum(aggregate_data[i,]aggregate_data$steps)
}
for (i in 1:nrow(aggregate_data)) {
aggregate_data[i,]$total_daily_steps <- sum(aggregate_data[i,]$steps)
}
head(aggregate_data[,3:4])
nrow(aggregate_data)
aggregate_data[2,]$total_daily_steps <- sum(aggregate_data[2,]$steps)
sum(aggregate_data[1,]$steps)
aggregate_data[3, aggregate_data$total_daily_steps] <- sum(aggregate_data[3,]$steps)
head(aggregate_data[,4])
aggregate_data[100, aggregate_data$total_daily_steps] <- sum(aggregate_data[100,]$steps)
aggregate_data[10, aggregate_data$total_daily_steps] <- sum(aggregate_data[10,]$steps)
aggregate_data[10,4]
aggregate_data[1,2]
raw_data[1,]
?aggregate
aggregate_data <- aggregate(steps ~ date, raw_data, as.vector, na.action = na.pass)
aggregate_data[1,2]
aggregate_data <- aggregate(steps ~ date, raw_data, as.vector, na.action = na.pass)
hist(aggregate_data$steps)
mean(sum(aggregate_data$steps))
laaply(aggregate_data$steps, sum)
lapply(aggregate_data$steps, sum)
aggregate_data$total_daily_steps <- lapply(aggregate_data$steps, sum)
nrow(aggregate_data)
sum(aggregate_data[1,]$steps)
sum(aggregate_data[2,]$steps)
for (i in 1 : nrow(aggregate_data)) {}
for (i in 1 : nrow(aggregate_data)) {
aggregata_data[i, aggregate_data$daily_total] <- sum(aggregate_data[i,]$steps)
}
for (i in 1 : nrow(aggregate_data)) {
aggregate_data[i, aggregate_data$daily_total] <- sum(aggregate_data[i,]$steps)
}
aggregate_data[1,3]
aggregate_data[2,3]
names(aggregate_data)
aggregate_data[, "daily_total"] <- 0
aggregate_data[1,3]
names(aggregate_data)
?median
?plot
plot(raw_data$interval, mean(raw_data$steps), type = "l")
aggregate_data2 <- aggregate(steps ~ interval, raw_data, as.vector, na.action = na.pass)
aggregate_data[2,]
aggregate_data2[2,]
names(aggregate_data2)
mean(aggregate_data2[200,])
nrow(aggregate_data2)
(24 * 60) /5
mean(aggregate_data[25,]$steps)
plot(aggregate_data2$interval, mean(aggregate_data2$steps))
length(aggregate_data2[5,2])
aggregate_data2[, "average_by_interval"] <- 0
source(test1.R)
source("test1.R")
source("test1.R")
mean(aggregate_data$total_daily)
names(aggregate_data)
aggregate_data[,3]
mean(aggregate_data$total_daily, na.rm = TRUE)
names(aggregate_data2)
aggregate_data2[,3]
source("test1.R")
mean(aggregate_data2[10,]$steps, na.rm = TRUE)
mean(aggregate_data2[100,]$steps, na.rm = TRUE)
aggregate_data2[100,]$steps
plot(as.numeric(as.character(aggregate_data2$interval)), aggregate_data2$average_by_interval, ylim = c(0, 200), type = "l")
aggregate_data2$average_by_interval
max(aggregate_data2$average_by_interva)
aggregate_data2[, aggregate_data2$average_by_interval == max(aggregate_data2$average_by_interval)]
aggregate_data2[aggregate_data2$average_by_interval == max(aggregate_data2$average_by_interval),]
aggregate_data2[aggregate_data2$average_by_interval == max(aggregate_data2$average_by_interval), aggregate_data2$interval]
aggregate_data2[aggregate_data2$average_by_interval == max(aggregate_data2$average_by_interval), ]$interval
mean(aggregate_data$total_daily, na.rm = TRUE)
nrow(raw_data[is.na(raw_data$steps),])
clean_data <- raw_data
names(aggregate_data2)
nrow(clean_data[is.na(clean_data$steps),])
clean_data[1, ]$steps <- aggregate_data2[(aggregate_data2$interval == clean_data$interval),]$average_by_interval
names(aggregate_data)
nrow(aggregate_data2)
aggregate_data[(aggregate_data$date == clean_data[100,]$date),]$total_daily
clean_data[100,]$date
names(aggregate_data)
aggregate_data$total_daily
weekdays(clean_data[1,]$date)
weekdays(strptime(clean_data[1,]$date))
?weekdays
weekdays(as.POSIXct(clean_data[1,]$date))
clean_data$day_type <- ""
levels(clean_data$day_type) <- c("Weekday", "Weekend")
names(clean_data)
str(clean_data)
clean_data[1,]$date
?as.POSIXct
clean_data[1000,]$date
weekdays(as.POSIXct(strptime(clean_data[1,]$date, "%Y-%m-%d))
)
)
""
;
;JRNV;Oinrv
""
weekdays(as.POSIXct(strptime(clean_data[1,]$date, "%Y-%m-%d")))
head(clean_data[,clean_data$day_type])
head(clean_data[,clean_data$day_type])
names(clean_data)
head(clean_data$day_type)
head(clean_data$day_type, 100)
weekend_days
levels(clean_data$day_type) <- c("Weekday", "Weekend")
weekend_days <- c("Saturday", "Sunday")
weekdays(as.POSIXct(strptime(clean_data[i,]$date, "%Y-%m-%d")))
weekdays(as.POSIXct(strptime(clean_data[i,]$date, "%Y-%m-%d"))) %in% weekend_days
"Sunday" %in% weekend_days
levels(clean_data$day_type)
clean_data[clean_data$day_type != "",]$day_type
clean_data[clean_data$day_type != "",]
nrow(clean_data[clean_data$day_type == "",])
weekdays(as.POSIXct(strptime(clean_data[10000,]$date, "%Y-%m-%d"))) %in% weekend_days
weekdays(as.POSIXct(strptime(clean_data[10000,]$date, "%Y-%m-%d")))
clean_data[10000,]$day_type
clean_data[10000,]$day_type <- "Weekend"
clean_data[10000,]$day_type
head(clean_data$day_type)
head(clean_data$day_type)
weekdays(as.POSIXct(strptime(clean_data[10,]$date, "%Y-%m-%d")))
day
testday
testday <- "Monday"
ifelse(testday %in% weekend_days, "Weekend", "Weekday")
clean_data[i,]$day_type <-   ifelse(testday %in% weekend_days, "Weekend", "Weekday")
clean_data[1,]$day_type <-   ifelse(testday %in% weekend_days, "Weekend", "Weekday")
clean_data[1,]$day_type
